name: Build and Deploy React App
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
    
    - name: Build React app
      run: npm run build
      env:
        CI: false
    
    # Detectar el directorio de build
    - name: Detect build directory
      id: detect-build-dir
      run: |
        if [ -d "dist" ]; then
          echo "build_dir=dist" >> $GITHUB_OUTPUT
          echo "✅ Directorio detectado: dist/"
        elif [ -d "build" ]; then
          echo "build_dir=build" >> $GITHUB_OUTPUT
          echo "✅ Directorio detectado: build/"
        else
          echo "❌ Error: No se encontró directorio dist/ ni build/"
          exit 1
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: ${{ steps.detect-build-dir.outputs.build_dir }}/
        retention-days: 7
    
    # ========================================
    # OPCIONES DE DESPLIEGUE
    # ========================================
    # Puedes activar una o ambas opciones de despliegue según tus necesidades:
    # 1. Firebase Hosting (comentar/descomentar según necesites)
    # 2. Hostinger via FTP (comentar/descomentar según necesites)
    #
    # IMPORTANTE: Configura los secrets necesarios en:
    # Settings > Secrets and variables > Actions
    # ========================================
    
    # ========================================
    # OPCIÓN 1: Despliegue en Firebase Hosting
    # ========================================
    # Para activar Firebase, descomenta las siguientes líneas y configura:
    # - FIREBASE_SERVICE_ACCOUNT: JSON del service account de Firebase
    # - projectId: Reemplaza 'tu-proyecto-firebase' con tu ID real de proyecto
    # ----------------------------------------
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        channelId: live
        projectId: tu-proyecto-firebase  # Reemplazar con tu projectId real
    
    # ========================================
    # OPCIÓN 2: Despliegue en Hostinger via FTP
    # ========================================
    # Para activar Hostinger, descomenta las siguientes líneas y configura:
    # - FTP_SERVER: Servidor FTP (ej: ftp.tudominio.com)
    # - FTP_USERNAME: Usuario FTP
    # - FTP_PASSWORD: Contraseña FTP
    # ----------------------------------------
    # NOTA: El directorio local se detecta automáticamente (dist/ o build/)
    # según el framework utilizado (Vite usa dist/, Create React App usa build/)
    - name: Deploy to Hostinger via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}  # Ejemplo: ftp.tudominio.com
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./${{ steps.detect-build-dir.outputs.build_dir }}/  # Auto-detecta dist/ o build/
        server-dir: /public_html/  # Directorio remoto en el servidor
    
    # ========================================
    # NOTAS SOBRE CONFIGURACIÓN:
    # ========================================
    # Para usar solo una opción, comenta la otra sección completa
    # Para usar ambas, deja ambas descomentadas (se ejecutarán en secuencia)
    # Asegúrate de configurar todos los secrets necesarios antes de hacer push
    # 
    # SOBRE LA DETECCIÓN AUTOMÁTICA:
    # - El workflow ahora detecta automáticamente si tu proyecto usa dist/ (Vite)
    #   o build/ (Create React App)
    # - Si necesitas forzar un directorio específico, cambia la línea:
    #   local-dir: ./${{ steps.detect-build-dir.outputs.build_dir }}/
    #   por:
    #   local-dir: ./dist/  (para Vite) o local-dir: ./build/  (para CRA)
    # ========================================
